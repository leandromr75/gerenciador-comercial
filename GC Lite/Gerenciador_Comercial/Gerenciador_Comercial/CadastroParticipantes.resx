<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAE0SURBVEhLvZWBDcIwEAM7AiMwAlIXZANGYARGYCRG
        KO/gJ5/ELSQqWLJoPhe7lQpMy7L8xXL4C3drnucLzGUhmz/MCz45GpMFXBkEXzl+K+wNPAKFYIbgrv3O
        izLOxosQyAAUnOimjOuxIgTxcCyRZbzuL0IAD9ZPUq9TGT/7isJBFbo1T2bMtgz8VOJe3WfUugz6tsQt
        OcZpGdBb4lZ88z1LwgaB3hL35zIMuDFa4l4vswv8dq1BI1Y5Fy/aq8Rd593SU0FhqA7CZ6JvYVYx0amM
        aBY31IFkYoVsfqi5yu3fhYAKE2uk2GhiWQqKJtZIsdHEshQUTayRYqOJZSkomlgjxUYTy1JQNLFGio0m
        lqWgysXrbWu8cVuvt/vIIy/Z4F4Be/jO+Cwb4g73LEPW4ZU+TU+iJu34Z3kfCwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAGASURBVEhLxZULjcMwEEQDoRAKoVIIFEIhFMJBOAaF
        UAiFUgiFUAi9edFslZ+d9amnG2kUx57ZddafdCX0fX8Wr+JdfJm06Ttb9nsoyEl8iBG8RDQn29ogI7ON
        QE/xIpL4aNKmj7HQXW3PAcPYLO48tABj1rQlk5CZhildf7Qj33YZJYo1aSuDgMfeh7vWIUHMiroXy1UC
        HnuJUa6GBmNGF78fh4EG4HWMckU0GOdkqLGeN7Hpy/A6xt1dS1gAhy9xu+l84LXv5a4lQoB49N60KfDa
        V000L10s7GEQJIDXnmrp5pvhvV3F1Frhtae6GSbbW9y7HX3VXajx3PYGEkwOrJ4HMcyQ8n6LrMWkpHrP
        HVgg0eIK0pMvoySxhkyGoO9EarddQUDCmBmk3XKpwi9zb1kZEo3NlC7zm5iTse0dKxHBYs1qRIOWr5iP
        5ZIBCVO/crXXEsF8sgwUbHwc/jzZ/Dj8W7LtM9YCBSwms+RzUNC1ZMM9+nEoMMniiChJ1/0ASplhycT7
        trAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAAeAB4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        CP8AgqR/wVK8R/CL4lR/Ar4Gf2HefF/UbBb3Wtc1FftGnfD6zmBEU80Q4kvHXLxQPwqhJJFdXiim+T/D
        /wDwT0tP2n5ZtR+I/i74/fHzxArsby7m1u9/su0kY7zHFawD7Pa/eyI02DGCEAr56+EHxWvPin43+IHx
        Kvnkk1f4meKtS12eR5GkaOB7uVbWAFiSEhtUt4VHZYFHavuP9lb9qL46/Ejwppvwz+GMmk29xoMM199q
        Fvaxzi18xAQ5nBjIWSYZKoZG3gnOCT+wYXhT6nldPFQjBzklKUpuyimr72drXS0s27ttqyX8+Y7xNo4r
        PKuWylU5YylCEKavKcovlenNG97N63SSSsndvx2f4NfEj9hnXlvvgL8Vvid4M1jSSLiTwJ4/vbnWPDur
        R7wxia1uirW6yCMoJYDG5ydsyDmv0d/4Jr/8FD9D/wCChXwbvtTj08eF/HnhG7Gk+MfCs1x5txoV5t3K
        wJCtJbTL88Uu0BgHUhZIpUTwf/grH46h0f4Q/DXQte1LSdR+KVgFl1Z9PbKxIbYC4bGAyRyziJkDKu4R
        kgDBA/PP4M/t23X/AATn/bJuviRa2f8AaFl4y8LXGharYPI4hup4rq0mtZ2VSMvEpvFBPQXT+teRmeR0
        8VkbziEFCUN7KylHm5b7K+/Mna9rp30t9Hk/GX1fidcOVKvtFNaXd5Rlyc9nq7PTlcbtXs1bVPb8Tfs9
        XX7NP7UPxK+E99ay2c3hnXrvVdEVw2NQ0DUbqe60+4iZlUSIgeS0dlyFmspVJ6Z+q/8Agnv8I9Wv/iRq
        d5pPjpfh7f2emlRfNZw3P2hHkQNFtlYL/Cpzyfl7V9mft3f8E+vDP7cPhnT55tT1Dwb4/wDC6TN4Z8Xa
        ZGkl3pLyBd8UsTjy7q0kZI/Nt5OHCAq0cipKn5wfta/Fb4hf8Ew5LGx+LvhL4d+Mre+VnsNX8K6td28t
        5GJGRWlsbi3It2IAJVbqfBJ+c16eV8aUMTlKyzFS5JqKipcvMmla2jTV7KzT0636L8g488Kc7yzin/Wn
        JqX1jDubqSpqp7KUZSvf3+aLS5nzRcG2vhaSV3z/AMRPha2hazqNtG7XS21xLH5+OZ9rEb+p64z1PXqa
        0f8Agm9+wto/7dH7W3iybxPpt1e/Dz4ZaFLpN7cxlo0uNfvprOdLaNyhRntrO3LyqDlP7RgBAJIHpf7O
        P7NHxY/4KXeCtP8AEFlqXgv4OfDHUJjFc32k3M2t+KrqNWjLxwJPbRWlk7IWAmY3e0kEREgEfpV+zt+z
        v4Q/ZU+EOk+BvA2kpo/h3R1fyovMeaaeR3Mks80rkvNNJIzO8jks7MSSSax4w44o4vAvLsJrzW5pWsrK
        zsk7O7aV+ltNb6d/gf4O5vlWZ/6wZ6lT5VL2dNSUneSa5pOLkrKLairuTbu+W3vf/9k=
</value>
  </data>
</root>